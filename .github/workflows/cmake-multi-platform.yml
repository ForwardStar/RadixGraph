name: CMake (Linux, GCC & Clang, low memory)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            c_compiler: gcc
            cpp_compiler: g++
          - compiler: clang
            c_compiler: clang
            cpp_compiler: clang++
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cmake g++ clang libtbb-dev
          if [ "${{ matrix.compiler }}" = "clang" ]; then
            sudo apt-get install -y libomp-dev
          fi

      - name: Configure CMake (low-memory mode)
        run: |
          cmake -B build -S . \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                -DCMAKE_CXX_FLAGS="-O2 -DNDEBUG -pipe -fno-rtti -fno-exceptions" \
                -DCMAKE_C_FLAGS="-O2 -DNDEBUG -pipe"

      - name: Build (limit parallel jobs)
        run: cmake --build build --parallel 2

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.compiler }}
          path: build/

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cpp_compiler: g++
          - compiler: clang
            cpp_compiler: clang++
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y g++ clang libtbb-dev
          if [ "${{ matrix.compiler }}" = "clang" ]; then
            sudo apt-get install -y libomp-dev
          fi

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.compiler }}
          path: build/

      - name: Test single thread example
        working-directory: build
        run: |
          echo "Compiling test program..."
          ${{ matrix.cpp_compiler }} ../examples/single-thread.cpp \
            -o single-thread -I../src -L. -lRG -fopenmp -ltbb -std=c++17 -O2
          echo "Running test..."
          ./single-thread

      - name: Test parallel example
        working-directory: build
        run: |
          echo "Compiling test program..."
          ${{ matrix.cpp_compiler }} ../examples/parallel.cpp \
            -o parallel -I../src -L. -lRG -fopenmp -ltbb -std=c++17 -O2
          echo "Running test..."
          ./parallel

      - name: Test concurrent example
        working-directory: build
        run: |
          echo "Compiling test program..."
          ${{ matrix.cpp_compiler }} ../examples/concurrent.cpp \
            -o concurrent -I../src -L. -lRG -fopenmp -ltbb -std=c++17 -O2
          echo "Running test..."
          ./concurrent
